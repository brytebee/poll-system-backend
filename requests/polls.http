# requests/polls.http

# @baseUrl = http://127.0.0.1:8000/api
# @authUrl = http://127.0.0.1:8000/api/auth
@baseUrl = https://37ae27a7e64b.ngrok-free.app/api
@authUrl = https://37ae27a7e64b.ngrok-free.app/api/auth

### Login (to get access token)
# @name login
POST {{authUrl}}/login/
Content-Type: application/json

{
    "username": "user001",
    "password": "secrepass00!"
}

### Extract tokens from login response
@access_token = {{login.response.body.access}}
@refresh_token = {{login.response.body.refresh}}

### Token Refresh (if needed)
# @name refresh
POST {{authUrl}}/token/refresh/
Content-Type: application/json

{
    "refresh": "{{refresh_token}}"
}

#### Update access token from refresh response
# @access_token = {{refresh.response.body.access}}

### GET /api/polls/ - List all polls
GET {{baseUrl}}/polls/

### GET /api/categories/ - List all categories
GET {{baseUrl}}/categories/

### POST /api/polls/ - Create new poll
POST {{baseUrl}}/polls/
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
    "title": "Should all programmers learn CSS",
    "description": "A poll to determine all developers should learn CSS",
    "category": {
        "name": "Technology",
        "description": "Polls related to technology and programming"
    },
    "options": [
        {
            "text": "Most definitely"
        },
        {
            "text": "If they think it's necessary"
        },
        {
            "text": "Maybe"
        },
        {
            "text": "Hell no"
        }
    ],
    "is_active": true,
    "allow_multiple_votes": true
}

### GET /api/polls/mine/ - Get Polls created by current user
GET {{baseUrl}}/polls/mine/
Authorization: Bearer {{access_token}}


### GET /api/polls/{id}/ - Get specific poll
GET {{baseUrl}}/polls/941b4b85-e4a6-4b8e-b6aa-14b67019aa74/

### PUT /api/polls/{id}/ - Update poll (requires auth)
PUT {{baseUrl}}/polls/b3933e86-217d-4952-b7da-4e00d57ef386/
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
    "title": "Best sport to watch on Sports Channel 5?",
    "description": "Which sport do you enjoy watching the most?",
    "category": "21315e90-6545-4cdb-973b-d85b55dc9ef2",
    "is_active": true,
    "allow_multiple_votes": true
}

### PATCH /api/polls/{id}/
PATCH {{baseUrl}}/polls/25e6ac20-89af-4224-aeb5-69af5a02e611/
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
    "options":  [
        {
            "text": "Python beer"
        },
        {
            "text": "C++ beer"
        },
        {
            "text": "TS beer"
        },
        {
            "text": "JS beer"
        }
    ]
}

### DELETE /api/polls/{id}/ - Delete poll (requires auth)
DELETE {{baseUrl}}/polls/50b50bc4-f267-46cc-aede-b2eee97172a2/
Authorization: Bearer {{access_token}}

### POST /api/polls/{id}/vote/ - Vote on poll
POST {{baseUrl}}/polls/941b4b85-e4a6-4b8e-b6aa-14b67019aa74/vote/
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
    "option_id": "58414a73-e25f-44b2-882f-4504d2ed35a3"
}

### GET /api/polls/{id}/results/ - Get poll results
GET {{baseUrl}}/polls/941b4b85-e4a6-4b8e-b6aa-14b67019aa74/results/

### GET /api/categories/{id}/ - Get specific category
GET {{baseUrl}}/categories/58414a73-e25f-44b2-882f-4504d2ed35a3/

### POST /api/categories/ - Create new category (likely requires auth)
POST {{baseUrl}}/categories/
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
    "name": "Technology",
    "description": "Polls related to technology and programming"
}

### GET /api/polls/?category={id} - Filter polls by category
GET {{baseUrl}}/polls/?category=fdd75574-6c90-4256-b772-142958f6dcf3

### GET /api/polls/?search={query} - Search polls
GET {{baseUrl}}/polls/?search=programming

### GET /api/polls/?is_active=true - Filter active polls
GET {{baseUrl}}/polls/?is_active=true

### GET /api/polls/?ordering=-created_at - Order polls by creation date (newest first)
GET {{baseUrl}}/polls/?ordering=-created_at

### Profile check (to verify token is working)
GET {{authUrl}}/profile/
Authorization: Bearer {{access_token}}

### Logout
POST {{authUrl}}/logout/
Content-Type: application/json

{
    "refresh_token": "{{refresh_token}}"
}

### Health Check
GET https://37ae27a7e64b.ngrok-free.app/api/health/
Content-Type: application/json
