# docker-compose.prod.yml
services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: poll_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nexuspolls-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    user: root
    build: .
    command: >
      bash -c "
      echo 'Waiting for database...' &&
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      echo 'Starting Gunicorn...' &&
      gunicorn --bind 0.0.0.0:8000 --timeout 120 --workers 1 --access-logfile - --error-logfile - poll_system.wsgi:application
      "
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=poll_system.settings.base
      - ENV=${ENV:-dev}
      - DEBUG=${DEBUG:-True}
      - DB_NAME=poll_system
      - DB_USER=postgres
      - DB_PASSWORD=supersecret
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOWED_ORIGIN_REGEXES=${CORS_ALLOWED_ORIGIN_REGEXES}
      - REDIS_URL=redis://redis:6379/0
      - USE_HTTPS=${USE_HTTPS:-False}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-False}
      - USE_DATABASE_SSL=${USE_DATABASE_SSL:-False}
      - ENABLE_SECURITY_MIDDLEWARE=${ENABLE_SECURITY_MIDDLEWARE:-False}
      - EMAIL_BACKEND=${EMAIL_BACKEND:-console}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    networks:
      - nexuspolls-network
    # Expose port for direct access (useful for development)
    ports:
      - "8000:8000"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - nexuspolls-network

  # Make nginx optional for local development
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    networks:
      - nexuspolls-network
    # Add profile to make nginx optional
    profiles:
      - with-nginx

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:

networks:
  nexuspolls-network:
    driver: bridge
